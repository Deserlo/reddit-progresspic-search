{"version":3,"sources":["components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Container","fallback","useState","title","setTitle","src","setSrc","items","setItems","useEffect","fetch","then","res","json","data","useForm","register","handleSubmit","onSubmit","query","gender","FilterNav","name","ref","value","type","List","length","map","item","className","post_thumbnail","onClick","thumbnail_src","showViewer","post_title","post_url","data-position","alt","First","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAsHeA,MAhHf,YAAiC,EAAZC,SAAa,IAAD,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,OAETF,mBAAS,IAFA,mBAExBG,EAFwB,KAEnBC,EAFmB,OAGLJ,mBAAS,IAHJ,mBAGxBK,EAHwB,KAGjBC,EAHiB,KAU/BC,qBAAU,WAZWC,MAAM,SAASC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAazCF,MAAK,SAACG,GAAD,OAAUN,EAASM,QAClC,IAZ4B,MAcIC,cAA3BC,EAduB,EAcvBA,SAAUC,EAda,EAcbA,aACZC,EAAW,SAACJ,GAIhB,IAAIK,EAAQ,QACO,IAAfL,EAAKM,SACPD,EAAQ,WAAaL,EAAKM,QAGhBV,MAAMS,GAAOR,MAAK,SAACC,GAAD,OAASA,EAAIC,OAAOF,MAAK,SAACG,GAAD,OAAQN,EAASM,UAa1E,SAASO,IAEL,OACE,gCACI,yCACF,uBAAMH,SAAYD,EAAaC,GAA/B,UACF,yBAAQI,KAAK,SAASC,IAAKP,EAA3B,UACE,wBAAQQ,MAAM,GAAd,sBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,MAAd,oBAGF,yBAAQF,KAAK,OAAOC,IAAKP,EAAzB,UACE,wBAAQQ,MAAM,GAAd,sBACA,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,qBAEE,uBAAOC,KAAK,iBAMtB,SAASC,EAAT,GAAoC,IAApBnB,EAAmB,EAAnBA,MAAON,EAAY,EAAZA,SACrB,OAAKM,GAA0B,IAAjBA,EAAMoB,OAGXpB,EAAMqB,KAAI,SAACC,GAChB,OACE,oCACE,qBACEC,UAAU,YACVR,KAAMO,EAAKE,eACXC,QAAS,kBAlEF,SAAC7B,EAAO8B,GACzB7B,EAASD,GACTG,EAAO2B,GAgEkBC,CAAWL,EAAKM,WAAYN,EAAKO,WAChDC,gBAAc,cAJhB,SAKE,qBAAKhC,IAAKwB,EAAKE,eAAgBO,IAAI,SAErC,6BAAKT,EAAKM,mBAZTlC,EAmBX,SAASsC,EAAT,GAAoC,EAAnBhC,MAAmB,EAAZN,SACtB,OACE,sBAAKuC,GAAG,SAAR,UACE,sBAAKV,UAAU,QAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,cAEjB,qBAAKA,UAAU,UAAf,SAA0B3B,IAC1B,qBAAK2B,UAAU,QAAf,SACE,qBAAKA,UAAU,OAAOzB,IAAKA,SAMnC,OACE,gCACE,sBAAKmC,GAAG,OAAR,UACE,qDACA,cAACnB,EAAD,IACA,yBAASmB,GAAG,aAAZ,SACE,cAACd,EAAD,CAAMnB,MAAOA,EAAQN,SAAU,oBAGnC,cAACsC,EAAD,CAAOhC,MAAOA,Q,MCzGLkC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ada76577.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Header from \"./Header\";\r\n\r\nconst getItems = () => fetch(\"/home\").then((res) => res.json());\r\n\r\nfunction Container({ fallback }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [src, setSrc] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n\r\n  const showViewer = (title, thumbnail_src) => {\r\n    setTitle(title);\r\n    setSrc(thumbnail_src);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems().then((data) => setItems(data));\r\n  }, []);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = (data) => {\r\n    //alert(JSON.stringify(data));\r\n    //alert(data.gender);\r\n    //alert(data.type);\r\n    let query = \"/home\"\r\n    if (data.gender != \"\" ) {\r\n      query = \"/search/\" + data.gender;\r\n    }\r\n    //alert(query);\r\n    let items = fetch(query).then((res) => res.json().then((data)=>setItems(data)));\r\n  }\r\n\r\n/*\r\n  const handleSubmit = (e)=> {\r\n    e.preventDefault();\r\n    console.log(e.target.gender.value);\r\n    console.log(e.target.type.value);\r\n    let query = \"/search/\" + e.target.gender.value;\r\n    let items = fetch(query).then((res) => res.json().then((data)=>setItems(data)));\r\n  }\r\n*/\r\n\r\n  function FilterNav() {\r\n\r\n      return (\r\n        <div>\r\n            <h1>Show Me</h1>\r\n          <form onSubmit = {handleSubmit(onSubmit)}>\r\n        <select name=\"gender\" ref={register}>\r\n          <option value=\"\">Select..</option>\r\n          <option value=\"F\">F</option>\r\n          <option value=\"M\">M</option>\r\n          <option value=\"Cat\">Cat</option>\r\n        </select>\r\n  \r\n        <select name=\"type\" ref={register}>\r\n          <option value=\"\">Select..</option>\r\n          <option value=\"L\">Loss</option>\r\n          <option value=\"G\">Gain</option>\r\n        </select>\r\n            <input type=\"submit\"/>\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  function List({ items, fallback }) {\r\n    if (!items || items.length === 0) {\r\n      return fallback;\r\n    } else {\r\n      return items.map((item) => {\r\n        return (\r\n          <article>\r\n            <div\r\n              className=\"thumbnail\"\r\n              name={item.post_thumbnail}\r\n              onClick={() => showViewer(item.post_title, item.post_url)}\r\n              data-position=\"left center\">\r\n              <img src={item.post_thumbnail} alt=\"jj\"/>\r\n            </div>\r\n            <h2>{item.post_title}</h2>\r\n          </article>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function First({ items, fallback }) {\r\n    return (\r\n      <div id=\"viewer\">\r\n        <div className=\"inner\">\r\n          <div className=\"nav-next\"></div>\r\n          <div className=\"nav-previous\"></div>\r\n          <div className=\"toggle\"></div>\r\n        </div>\r\n        <div className=\"caption\">{title}</div>\r\n        <div className=\"image\">\r\n          <img className=\"view\" src={src} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"main\">\r\n        <h1>Progress Pic Search</h1>\r\n        <FilterNav/>\r\n        <section id=\"thumbnails\">\r\n          <List items={items}  fallback={\"Loading...\"} />\r\n        </section>\r\n      </div>\r\n      <First items={items} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import \"./App.css\";\r\nimport Container from \"./components/Container\";\r\nimport \"./main.css\";\r\n\r\nfunction App() {\r\n  return <Container/>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}