[{"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\App.js":"1","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\reportWebVitals.js":"2","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\index.js":"3","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Header.js":"4","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\FilterNav.js":"5","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Container.js":"6","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Filter.js":"7","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Viewer.js":"8","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\List.js":"9","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Modal.js":"10"},{"size":189,"mtime":1612769249144,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609044827520,"results":"13","hashOfConfig":"12"},{"size":500,"mtime":1609044827520,"results":"14","hashOfConfig":"12"},{"size":164,"mtime":1610428029694,"results":"15","hashOfConfig":"16"},{"size":1036,"mtime":1611359214999,"results":"17","hashOfConfig":"16"},{"size":4072,"mtime":1612571324069,"results":"18","hashOfConfig":"12"},{"size":1183,"mtime":1610597672838,"results":"19","hashOfConfig":"16"},{"size":513,"mtime":1610596740706,"results":"20","hashOfConfig":"16"},{"size":239,"mtime":1610599467659,"results":"21","hashOfConfig":"16"},{"size":642,"mtime":1612570882010,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eg161x",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"vy9juu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\App.js",[],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\reportWebVitals.js",[],["48","49"],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\index.js",[],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Header.js",[],["50","51"],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\FilterNav.js",[],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Container.js",["52","53","54","55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Modal from './Modal';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getItems = () => fetch(\"/home\").then((res) => res.json());\r\n\r\nfunction Container({ fallback }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [src, setSrc] = useState(\"\");\r\n  const [link, setLink] = useState(\"\");\r\n  const [items, setItems] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const showViewer = (title, thumbnail_src, link, status=true) => {\r\n    setTitle(title);\r\n    setSrc(thumbnail_src);\r\n    setLink(link);\r\n    setStatus(status);\r\n    //console.log(link);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems().then((data) => setItems(data));\r\n  }, []);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = (data) => {\r\n    //alert(JSON.stringify(data));\r\n    //alert(data.gender);\r\n    //alert(data.type);\r\n    let query = \"/home\"\r\n    if (data.gender != \"\" ) {\r\n      query = \"/search/\" + data.gender + \"/\" + data.type;\r\n    }\r\n    //alert(query);\r\n    let items = fetch(query).then((res) => res.json().then((data)=>setItems(data)));\r\n  }\r\n\r\n\r\n  function FilterNav() {\r\n\r\n      return (\r\n        <div>\r\n            <h1>Show Me</h1>\r\n          <form onSubmit = {handleSubmit(onSubmit)}>\r\n        <select name=\"gender\" ref={register}>\r\n          <option value=\"\">Select..</option>\r\n          <option value=\"F\">F</option>\r\n          <option value=\"M\">M</option>\r\n        </select>\r\n  \r\n        <select name=\"type\" ref={register}>\r\n          <option value=\"\">Select..</option>\r\n          <option value=\"1\">Loss</option>\r\n          <option value=\"2\">Gain</option>\r\n        </select>\r\n            <input type=\"submit\" value=\"Search\"/>\r\n          </form>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  function List({ items, fallback }) {\r\n    if (!items || items.length === 0) {\r\n      return fallback;\r\n    } else {\r\n      return items.map((item) => {\r\n        return (\r\n          <article>\r\n            <a\r\n              className=\"thumbnail\"\r\n              name={item.post_thumbnail}\r\n              onClick={() => showViewer(item.post_title, item.post_url, item.post_permalink, true)}\r\n              data-position=\"left center\">\r\n              <img src={item.post_thumbnail} alt={item.post_title}/>\r\n            </a>\r\n            <h2>{item.post_title}</h2>\r\n \r\n          </article>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n/*\r\n  function First({ items, fallback }) {\r\n    return (\r\n      <div id=\"viewer\">\r\n        { status && (<Modal closeModal={() => setStatus(false)}>\r\n        <div className=\"inner\">\r\n          <div className=\"nav-next\"></div>\r\n          <div className=\"nav-previous\"></div>\r\n          <div className=\"toggle\"></div>\r\n        </div>\r\n        <div className=\"slide active\">\r\n        <div className=\"caption\">{title}</div>\r\n        <div className=\"image\">\r\n        <a href={\"https://reddit.com\"+ link} target=\"_blank\"><img className=\"view\" src={src}/></a> \r\n        </div>\r\n        </div>\r\n        </Modal>)}\r\n      </div>\r\n    );\r\n  }\r\n  */\r\n\r\n  function First({ items, fallback }) {\r\n    return (\r\n      <div id=\"viewer\">\r\n        <div className=\"inner\">\r\n          <div className=\"nav-next\"></div>\r\n          <div className=\"nav-previous\"></div>\r\n          <div className=\"toggle\"></div>\r\n        </div>\r\n        <div className=\"slide active\">\r\n        <div className=\"caption\">{title}</div>\r\n        <div className=\"image\">\r\n        <a href={\"https://reddit.com\"+ link} target=\"_blank\"><img className=\"view\" src={src}/></a> \r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"main\">\r\n        <h1>Progress Pic Search</h1>\r\n        <FilterNav/>\r\n        <div className=\"modal-modal\">\r\n        { status && (<Modal closeModal={() => setStatus(false)}><First items={items} /></Modal>)}\r\n  </div>\r\n        <section id=\"thumbnails\">\r\n          <List items={items}  fallback={\"Loading...\"} />\r\n        </section>\r\n      </div>\r\n      <First items={items} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Filter.js",["57","58"],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Viewer.js",["59","60","61","62","63"],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\List.js",["64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport './Viewer';\r\n\r\n\r\n\r\nfunction List({ items, fallback }) {\r\n\r\n    return(\r\n        <div>   \r\n            <button>Click</button>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default List;",["66","67"],"C:\\Users\\18054\\MyProjects\\reddit-api-app\\react-reddit-app\\src\\components\\Modal.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":37,"column":21,"nodeType":"76","messageId":"77","endLine":37,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":41,"column":9,"nodeType":"80","messageId":"81","endLine":41,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":75,"column":13,"nodeType":"84","endLine":79,"endColumn":43},{"ruleId":"85","severity":1,"message":"86","line":126,"column":46,"nodeType":"87","endLine":126,"endColumn":61},{"ruleId":"88","severity":1,"message":"89","line":126,"column":62,"nodeType":"84","endLine":126,"endColumn":95},{"ruleId":"78","severity":1,"message":"79","line":7,"column":12,"nodeType":"80","messageId":"81","endLine":7,"endColumn":17},{"ruleId":"78","severity":1,"message":"90","line":20,"column":14,"nodeType":"80","messageId":"81","endLine":20,"endColumn":28},{"ruleId":"78","severity":1,"message":"91","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"92","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"93","severity":2,"message":"94","line":11,"column":35,"nodeType":"80","messageId":"95","endLine":11,"endColumn":40},{"ruleId":"88","severity":1,"message":"89","line":13,"column":11,"nodeType":"84","endLine":13,"endColumn":45},{"ruleId":"93","severity":2,"message":"96","line":13,"column":38,"nodeType":"80","messageId":"95","endLine":13,"endColumn":41},{"ruleId":"78","severity":1,"message":"91","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"92","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"68","replacedBy":"97"},{"ruleId":"70","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'parentFunction' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-undef","'title' is not defined.","undef","'src' is not defined.",["99"],["100"],"no-global-assign","no-unsafe-negation"]